name: Deploy Lambda

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build in Amazon Linux Container
      run: |
       docker run --rm -v $(pwd):/lambda-build -w /lambda-build \
        amazonlinux:2023 /bin/bash -c "
        set -e  # Exit on error
        yum install -y python3-pip zip &&
        pip3 install poetry && poetry self add poetry-plugin-export &&
        poetry export -f requirements.txt --without-hashes -o requirements.txt || { echo 'Failed to export requirements'; exit 1; }

        cat requirements.txt  # Debugging: Check contents
        mkdir -p package &&
        pip3 install --target package -r requirements.txt || { echo 'Failed to install dependencies'; exit 1; }
        ls -l package  # Debugging: Check installed dependencies

        # Zip dependencies
        cd package &&
        zip -r ../function.zip . || { echo 'Zipping package failed'; exit 1; }
        cd ..

        # Zip source code
        zip -g -r function.zip src/ || { echo 'Zipping src failed'; exit 1; }
        "


    - name: Upload to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
      run: |
        aws s3 cp function.zip s3://${{vars.LAMBDA_PACKAGE_BUCKET}}/process_txn_email.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to AWS Lambda
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
      run: |
        aws lambda update-function-code \
          --function-name process-txn-email \
          --s3-bucket pennywise-lambda-deploy \
          --s3-key process_txn_email.zip
